// Tipos Primitivos
// Os tipos primitivos s√£o imut√°veis e armazenam valores diretamente na mem√≥ria.

// 1Ô∏è‚É£ string ‚Äì Texto
// Usado para armazenar palavras, frases ou caracteres.
let nome = "Mario"
let cidade = "S√£o Paulo"
let cao = "Pug"
let mensagem = `Ol√°, ${nome}`
console.log(typeof nome) 
console.log(mensagem)

// 2Ô∏è‚É£ number ‚Äì N√∫meros
// Pode ser inteiro (int) ou decimal (float).
let idade = 43
let altura = 1.84
let temperatura = -3.9
console.log( typeof idade)

// 3Ô∏è‚É£ boolean ‚Äì Verdadeiro ou falso (true / false)
// Usado para representar valores l√≥gicos.
let programador = true
let jogador = true
console.log(typeof programador)
console.log(typeof jogador)

// 4Ô∏è‚É£ null ‚Äì Valor nulo
// Representa aus√™ncia de valor.
let salario = null
console.log(typeof salario)

// 5Ô∏è‚É£ undefined ‚Äì Valor indefinido
// Quando uma vari√°vel existe, mas n√£o foi inicializada.
let endereco
console.log(typeof endereco)

// 6Ô∏è‚É£ symbol ‚Äì Identificador √∫nico
// Usado para criar valores √∫nicos, mesmo que tenham o mesmo conte√∫do.
let id1 = Symbol("id")
let id2 = Symbol("id")
console.log(id1 === id2)
console.log(typeof id1)

// üîµ Tipos de Refer√™ncia (Objetos)
// Os tipos de refer√™ncia armazenam refer√™ncias na mem√≥ria, e n√£o o valor diretamente.

// 1Ô∏è‚É£ Arrays (listas de valores)
let frutas = ['Uva', 'Banana', 'Kiwi']
console.log(typeof frutas)

//2Ô∏è‚É£ Objetos (estrutura de chave e valor)
let carro = {marca: "Fiat", modelo: "P√°lio"}
console.log(typeof carro)

//3Ô∏è‚É£ Fun√ß√µes (blocos de c√≥digo reutiliz√°veis)
function saudacao(){
    console.log(`Ol√°, ${nome}`)
}
saudacao()
console.log(typeof saudacao)